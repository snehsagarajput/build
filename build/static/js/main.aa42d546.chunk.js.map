{"version":3,"sources":["assests/content.jpg","assests/style.jpg","assests/styled.png","components/upload.js","components/image.js","components/example.js","components/helper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UploadButton","props","extra","dropdown","style","fontWeight","paddingLeft","paddingTop","paddingBottom","form","id","defaultValue","onChange","event","imagedrop","current","document","getElementById","value","disabled","text","type","image","target","files","name","accept","ImageExample","display","flexDirection","src","loc","alt","title","height","width","marginTop","marginBottom","alignSelf","Example","className","require","fontSize","checkIfValid","path","String","ext","i","endsWith","App","contentImage","useRef","styleImage","styleImageDropdown","useState","isModalActive","setModalActive","isExampleModalActive","setExampleModalActive","isDataAvailable","setDataAvailable","isError","setError","handleClose","a","data","FormData","append","validity","console","log","fetch","method","body","then","res","catch","err","useEffect","call","json","length","x","option","createElement","add","onClick","Modal","show","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Body","Footer","Button","variant","e","preventDefault","contentImageAvailable","styleUploadAvailable","styleDropdownAvailable","styleImageAvailable","errorContent","window","alert","handleFormSubmission","Date","getTime","href","download","justifyContent","marginLeft","color","timeout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"kLAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mJC8B5BC,MA5Bf,SAAsBC,GACpB,IAAMC,EAA2B,SAAnBD,EAAME,SACjB,6BACC,yBAAKC,MAAO,CAAEC,WAAY,OAAQC,YAAa,MAAOC,WAAY,KAAMC,cAAe,OAAvF,MACA,2BAAOC,KAAK,QACZ,4BAAQC,GAAG,eACTC,aAAc,OACdC,SAAU,SAACC,GACTZ,EAAMa,UAAUC,QAAUC,SAASC,eAAe,gBAAgBC,MAAQ,SAE5E,4BAAQA,MAAO,OAAQC,UAAQ,GAA/B,2BAEM,KACZ,OACE,6BACE,2BAAOV,KAAK,OAAZ,UAA0BR,EAAMmB,KAAhC,WACA,2BACEC,KAAK,OACLT,SAAU,SAACC,GAAD,OAAYZ,EAAMqB,MAAMP,QAAUF,EAAMU,OAAOC,MAAM,IAC/Dd,GAAG,MACHe,KAAMxB,EAAMwB,KACZC,OAAO,YAERxB,ICPQyB,MAhBf,SAAsB1B,GACpB,OACE,yBACEG,MAAO,CACLwB,QAAS,OACTC,cAAe,WAGjB,yBAAKC,IAAK7B,EAAM8B,IAAKC,IAAK/B,EAAMgC,MAAOC,OAAO,MAAMC,MAAM,QAC1D,yBAAK/B,MAAO,CAAEgC,UAAW,EAAGC,aAAc,GAAIC,UAAW,SAAUjC,WAAY,SAC5EJ,EAAMgC,SCiCAM,MAzCf,WACE,OACE,yBACEC,UAAU,UAEV,kBAAC,EAAD,CACET,IAAKU,EAAQ,IACbR,MAAO,kBAET,yBACE7B,MAAO,CACLsC,SAAU,GACVrC,WAAY,OACZiC,UAAW,SACXD,aAAc,KALlB,KAUA,kBAAC,EAAD,CACEN,IAAKU,EAAQ,IACbR,MAAO,gBAET,yBACE7B,MAAO,CACLsC,SAAU,GACVrC,WAAY,OACZiC,UAAW,SACXD,aAAc,KALlB,KAUA,kBAAC,EAAD,CACEN,IAAKU,EAAQ,IACbR,MAAO,mBChBAU,EAvBM,SAACC,GACpB,GACW,KAATA,GACS,OAATA,KACkB,kBAATA,GAAqBA,aAAgBC,QAE9C,OAAO,EAWT,IAVA,IAAMC,EAAM,CACV,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QAEOC,EAAI,EAAGA,EAAI,IAAKA,EACvB,GAAIH,EAAKI,SAASF,EAAIC,IAAK,OAAO,EAEpC,OAAO,G,gBCuLME,MAjMf,WACE,IAAMC,EAAeC,iBAAO,MACtBC,EAAaD,iBAAO,MACpBE,EAAqBF,iBAAO,MAHrB,EAI2BG,oBAAS,GAJpC,mBAINC,EAJM,KAISC,EAJT,OAKyCF,oBAAS,GALlD,mBAKNG,EALM,KAKgBC,EALhB,OAM+BJ,oBAAS,GANxC,mBAMNK,EANM,KAMWC,EANX,OAOeN,mBAAS,KAPxB,mBAONO,EAPM,KAOGC,EAPH,KAaPC,EAAc,WAClBP,GAAe,GACfI,GAAiB,GACjBF,GAAsB,GACtBI,EAAS,MAjBE,4CAqCb,gCAAAE,EAAA,uDACMC,EAAO,IAAIC,UACVC,OAAO,UAAWjB,EAAanC,UAChCqD,EAAWzB,EAAY,UAACS,EAAWrC,eAAZ,aAAC,EAAoBU,OAE9CwC,EAAKE,OAAO,OAAQ,UAAYF,EAAKE,OAAO,OAAQ,YACtDC,EACEH,EAAKE,OAAO,QAASf,EAAWrC,SAAWkD,EAAKE,OAAO,gBAAiBd,EAAmBtC,SAC7FsD,QAAQC,IAAIL,GACZM,MAAe,UAAW,CACxBC,OAAQ,OACRC,KAAMR,IAELS,MAAK,SAACC,GACLN,QAAQC,IAAIK,GACZf,GAAiB,MAElBgB,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZf,EAASe,MAnBf,4CArCa,sBA4Fb,OA/BAC,qBAAU,YACc,IAAlBvB,GA9DO,mCA+DTwB,KAED,CAACxB,IAEJuB,qBAAU,WA7CRP,MAAe,sBAAuB,CACpCC,OAAQ,QACPE,MAAK,SAAAC,GAAG,OAAIA,EAAIK,UAChBN,MAAK,SAAAC,GACJ,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,EAAG,KAASM,SAAUlC,EAAG,CAC3C,IAAImC,EAAIlE,SAASC,eAAe,gBAC5BkE,EAASnE,SAASoE,cAAc,UACpCD,EAAO/D,KAAOuD,EAAG,KAAS5B,GAC1BmC,EAAEG,IAAIF,EAAQD,EAAE,QAEjBN,OAAM,SAACC,GACRR,QAAQC,IAAIO,QAoCf,IAwBD,yBAAKrC,UAAU,kBACb,yBAAKA,UAAU,UAAf,yBACA,4BACEnB,KAAK,SACLX,GAAG,WACHN,MAAO,CAAE8B,OAAQ,GAAIC,MAAO,KAC5BK,UAAU,yBACV8C,QAAS,kBAAM5B,GAAsB,KALvC,gBASA,kBAAC6B,EAAA,EAAD,CAAOC,KAAM/B,EAAsBgC,OAAQ1B,EAAa2B,WAAW,EAAOC,KAAK,KAC7EC,kBAAgB,gCAChBC,UAAQ,GACR,kBAACN,EAAA,EAAMO,OAAP,CAAcC,aAAW,IACzB,kBAACR,EAAA,EAAMS,KAAP,KACE,kBAAC,EAAD,OAEF,kBAACT,EAAA,EAAMU,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBb,QAASvB,GAA3C,WAKJ,yBAAKvB,UAAU,WACb,kBAAC,EAAD,CACElB,MAAO4B,EACP9B,KAAM,UACNV,GAAI,gBACJe,KAAM,UACNtB,SAAU,UAEZ,kBAAC,EAAD,CACEmB,MAAO8B,EACPhC,KAAM,QACNV,GAAI,cACJe,KAAM,QACNtB,SAAU,OACVW,UAAWuC,KAGf,4BACEhC,KAAK,SACLX,GAAG,gBACH4E,QAAS,SAACc,GAAD,OAlEc,SAACA,GAAO,IAAD,IAClCA,EAAEC,iBACF,IAAIC,EAAwB3D,EAAY,UAACO,EAAanC,eAAd,aAAC,EAAsBU,MAC3D8E,EAAuB5D,EAAY,UAACS,EAAWrC,eAAZ,aAAC,EAAoBU,MACxD+E,EAAyB7D,EAAaU,EAAmBtC,SACzD0F,EAAsBF,GAAwBC,EAClD,IAAKF,IAA0BG,EAAqB,CAClD,IAAIC,EAAe,uBAKnB,OAHAA,GAAgBJ,EAAwB,QAD7BG,EAAsB,UAAY,oBAE7CC,GAAgB,cAChBC,OAAOC,MAAMF,GAGblD,GAAe,GAoDGqD,CAAqBT,IACrC5D,UAAU,gCACVpC,MAAO,CAAE8B,OAAQ,GAAIC,MAAO,MAL9B,WASA,kBAACoD,EAAA,EAAD,CAAOC,KAAMjC,EAAekC,OAAQ1B,EAAa2B,WAAW,GAC1D,kBAACH,EAAA,EAAMO,OAAP,CAAcC,aAAW,IACxBpC,EACC,yBAAKvD,MAAO,CAAE8B,OAAQ,OAAQC,MAAO,SACnC,kBAACoD,EAAA,EAAMS,KAAP,KACE,yBACElE,IAAc,YAAa,IAAIgF,MAAOC,UACtC/E,IAAI,+CACJ5B,MAAO,CAAE+B,MAAO,OAAQD,OAAQ,WAGpC,kBAACqD,EAAA,EAAMU,OAAP,KACE,uBACEzD,UAAU,kBACVwE,KAAe,gBAAiB,IAAIF,MAAOC,UAC3CE,UAAQ,GAHV,YAKW,+CAEX,kBAACf,EAAA,EAAD,CAAQC,QAAQ,kBAAkBb,QAASvB,GAA3C,WAMQ,MAAZF,EAAmB,yBAAKzD,MAAO,CAAE8B,OAAQ,OAAQC,MAAO,OAAQP,QAAS,OAAQsF,eAAgB,WAC/F,kBAAC3B,EAAA,EAAMS,KAAP,KACE,6DAAkC,6BAAOnC,KAG1C,yBAAKzD,MAAO,CAAE8B,OAAQ,OAAQC,MAAO,SACpC,kBAACoD,EAAA,EAAMS,KAAP,KACE,8CAAmB,6BAAnB,sDACA,yBAAK5F,MAAO,CAAE8B,OAAQ,OAAQC,MAAO,OAAQgF,WAAY,QACvD,kBAAC,IAAD,CACE9F,KAAK,OACL+F,MAAM,UACNlF,OAAQ,GACRC,MAAO,GACPkF,QAAS,YCpLTC,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5G,SAASC,eAAe,SDyHpB,kBAAmB4G,WACrBA,UAAUC,cAAcC,MACrBrD,MAAK,SAAAsD,GACJA,EAAaC,gBAEdrD,OAAM,SAAAsD,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.aa42d546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/content.b218bc6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/style.66500d9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/styled.bf8b6da3.png\";","import React from \"react\";\r\n\r\nfunction UploadButton(props) {\r\n  const extra = props.dropdown === \"True\" ?\r\n    (<div>\r\n      <div style={{ fontWeight: \"bold\", paddingLeft: \"20%\", paddingTop: \"1%\", paddingBottom: \"1%\" }}>OR</div>\r\n      <label form=\"img\"></label>\r\n      <select id=\"contentImage\"\r\n        defaultValue={\"null\"}\r\n        onChange={(event) => {\r\n          props.imagedrop.current = document.getElementById(\"contentImage\").value + \".jpg\";\r\n        }}>\r\n        <option value={\"null\"} disabled>Choose From Available</option>\r\n      </select>\r\n    </div>) : null;\r\n  return (\r\n    <div>\r\n      <label form=\"img\">Select {props.text} Image:</label>\r\n      <input\r\n        type=\"file\"\r\n        onChange={(event) => (props.image.current = event.target.files[0])}\r\n        id=\"img\"\r\n        name={props.name}\r\n        accept=\"image/*\"\r\n      />\r\n      {extra}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadButton;\r\n","import React from \"react\";\r\n\r\nfunction ImageExample(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <img src={props.loc} alt={props.title} height=\"180\" width=\"260\" />\r\n      <div style={{ marginTop: 5, marginBottom: 40, alignSelf: \"center\", fontWeight: \"bold\" }}>\r\n        {props.title}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageExample;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport ImageExample from \"./image.js\";\r\n\r\nfunction Example() {\r\n  return (\r\n    <div\r\n      className=\"images\"\r\n    >\r\n      <ImageExample\r\n        loc={require(\"../assests/content.jpg\")}\r\n        title={\"Content Image\"}\r\n      />\r\n      <div\r\n        style={{\r\n          fontSize: 50,\r\n          fontWeight: \"bold\",\r\n          alignSelf: \"center\",\r\n          marginBottom: 70,\r\n        }}\r\n      >\r\n        +\r\n      </div>\r\n      <ImageExample\r\n        loc={require(\"../assests/style.jpg\")}\r\n        title={\"Style Image\"}\r\n      />\r\n      <div\r\n        style={{\r\n          fontSize: 50,\r\n          fontWeight: \"bold\",\r\n          alignSelf: \"center\",\r\n          marginBottom: 70,\r\n        }}\r\n      >\r\n        =\r\n      </div>\r\n      <ImageExample\r\n        loc={require(\"../assests/styled.png\")}\r\n        title={\"Styled Image\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n","const checkIfValid = (path) => {\r\n  if (\r\n    path === \"\" ||\r\n    path === null ||\r\n    !(typeof path === \"string\" || path instanceof String)\r\n  )\r\n    return false;\r\n  const ext = [\r\n    \".jpg\",\r\n    \".jpeg\",\r\n    \".png\",\r\n    \".gif\",\r\n    \".JPG\",\r\n    \".JPEG\",\r\n    \".PNG\",\r\n    \".GIF\",\r\n  ];\r\n  for (let i = 0; i < 4; ++i) {\r\n    if (path.endsWith(ext[i])) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default checkIfValid;\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport UploadButton from \"./components/upload.js\";\nimport Example from \"./components/example.js\";\nimport checkIfValid from \"./components/helper.js\"; //function\n\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction App() {\n  const contentImage = useRef(null);\n  const styleImage = useRef(null);\n  const styleImageDropdown = useRef(null);\n  const [isModalActive, setModalActive] = useState(false);\n  const [isExampleModalActive, setExampleModalActive] = useState(false);\n  const [isDataAvailable, setDataAvailable] = useState(false);\n  const [isError, setError] = useState(200);\n\n\n  const origin = \"\";\n\n\n  const handleClose = () => {\n    setModalActive(false);\n    setDataAvailable(false);\n    setExampleModalActive(false);\n    setError(200);\n  };\n\n\n  const addImagesToList = () => {\n    fetch(origin + \"/getStyleImagesList\", {\n      method: \"GET\",\n    }).then(res => res.json())\n      .then(res => {\n        for (let i = 0; i < res[\"data\"].length; ++i) {\n          let x = document.getElementById(\"contentImage\");\n          let option = document.createElement(\"option\");\n          option.text = res[\"data\"][i];\n          x.add(option, x[0]);\n        }\n      }).catch((err) => {\n        console.log(err);\n      })\n  }\n\n  async function call() {\n    let data = new FormData();\n    data.append(\"content\", contentImage.current);\n    let validity = checkIfValid(styleImage.current?.name);\n    validity ?\n      data.append(\"type\", \"upload\") : data.append(\"type\", \"dropdown\");\n    validity ?\n      data.append(\"style\", styleImage.current) : data.append(\"styleDropdown\", styleImageDropdown.current);\n    console.log(data);\n    fetch(origin + \"/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => {\n        console.log(res);\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      })\n  }\n\n\n  useEffect(() => {\n    if (isModalActive === true) {\n      call();\n    }\n  }, [isModalActive]);\n\n  useEffect(() => {\n    addImagesToList();\n  }, []);\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    let contentImageAvailable = checkIfValid(contentImage.current?.name);\n    let styleUploadAvailable = checkIfValid(styleImage.current?.name)\n    let styleDropdownAvailable = checkIfValid(styleImageDropdown.current);\n    let styleImageAvailable = styleUploadAvailable || styleDropdownAvailable;\n    if (!contentImageAvailable || !styleImageAvailable) {\n      let errorContent = \"Please Select Valid \";\n      let temp = styleImageAvailable ? \"Content\" : \"Style and Content\";\n      errorContent += contentImageAvailable ? \"Style\" : temp;\n      errorContent += \" Image\"; //\\nAlso Check if Image's Format is Valid\";\n      window.alert(errorContent);\n      return;\n    } else {\n      setModalActive(true);\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"container-main\">\n      <div className=\"header\">Neural Style Transfer</div>\n      <button\n        type=\"button\"\n        id=\"hide-btn\"\n        style={{ height: 40, width: 120 }}\n        className=\"btn btn-primary button\"\n        onClick={() => setExampleModalActive(true)}\n      >\n        Show Example\n      </button>\n      <Modal show={isExampleModalActive} onHide={handleClose} animation={false} size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n        <Modal.Header closeButton></Modal.Header>\n        <Modal.Body>\n          <Example />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"btn btn-primary\" onClick={handleClose}>\n            Close\n              </Button>\n        </Modal.Footer>\n      </Modal>\n      <div className=\"uploads\">\n        <UploadButton\n          image={contentImage}\n          text={\"Content\"}\n          id={\"content-image\"}\n          name={\"content\"}\n          dropdown={\"False\"}\n        />\n        <UploadButton\n          image={styleImage}\n          text={\"Style\"}\n          id={\"style-image\"}\n          name={\"style\"}\n          dropdown={\"True\"}\n          imagedrop={styleImageDropdown}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        id=\"submit-button\"\n        onClick={(e) => handleFormSubmission(e)}\n        className=\"btn btn-lg btn-primary button\"\n        style={{ height: 45, width: 110 }}\n      >\n        Stylize\n      </button>\n      <Modal show={isModalActive} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton></Modal.Header>\n        {isDataAvailable ? (\n          <div style={{ height: \"100%\", width: \"100%\" }}>\n            <Modal.Body>\n              <img\n                src={origin + \"/output/\" + new Date().getTime()}\n                alt=\"Preview Unavailable - Try Downloading Result\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              ></img>\n            </Modal.Body>\n            <Modal.Footer>\n              <a\n                className=\"btn btn-primary\"\n                href={origin + \"/output/True\" + new Date().getTime()}\n                download\n              >\n                Download <span>&#128525;</span>\n              </a>\n              <Button variant=\"btn btn-primary\" onClick={handleClose}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </div>\n        ) :\n          isError !== 200 ? (<div style={{ height: \"100%\", width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n            <Modal.Body >\n              <div>Server Error Please Try Again<br />{isError}</div>\n            </Modal.Body>\n          </div>) :\n            (<div style={{ height: \"100%\", width: \"100%\" }}>\n              <Modal.Body>\n                <p>Processing......<br />Note : If loader disappears try reloading the page</p>\n                <div style={{ height: \"100%\", width: \"100%\", marginLeft: \"40%\" }}>\n                  <Loader\n                    type=\"Bars\"\n                    color=\"#00BFFF\"\n                    height={80}\n                    width={80}\n                    timeout={60000}\n                  />\n                </div>\n              </Modal.Body>\n            </div>\n            )}\n      </Modal>\n\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}